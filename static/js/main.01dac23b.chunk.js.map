{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regexp","defaultValues","NewMovie","state","values","errors","titleError","descriptionError","imgUrlError","imdbUrlError","imdbIdError","handleInput","event","target","name","setState","prevState","value","trim","clearForm","onBlurTitle","onBlurDescription","onBlurImgUrl","test","onBlurImdbUrl","onBlurImdbId","onSubmit","preventDefault","props","addMovie","this","disabledSubmit","Object","some","error","type","onBlur","onChange","cn","disabled","form__button","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01dac23b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames/bind';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nconst defaultValues = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = {\n    values: defaultValues,\n    errors: {\n      titleError: false,\n      descriptionError: false,\n      imgUrlError: false,\n      imdbUrlError: false,\n      imdbIdError: false,\n    },\n  };\n\n  handleInput = (event) => {\n    const { target } = event;\n    const { name } = event.target;\n\n    this.setState(prevState => ({\n      values: {\n        ...prevState.values,\n        [name]: target.value.trim(),\n      },\n      errors: {\n        ...prevState.errors,\n        [`${name}Error`]: false,\n      },\n    }));\n  };\n\n  clearForm = () => (\n    this.setState({\n      values: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    })\n  )\n\n  onBlurTitle = (event) => {\n    if (!this.state.values.title) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          titleError: !prevState.values.title,\n        },\n      }));\n    }\n  }\n\n  onBlurDescription = (event) => {\n    if (!this.state.values.title) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          descriptionError: !prevState.values.description,\n        },\n      }));\n    }\n  }\n\n  onBlurImgUrl = (event) => {\n    if (!regexp.test(this.state.values.imgUrl)\n      || this.state.values.imgUrl === '') {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          imgUrlError: true,\n        },\n      }));\n    }\n  }\n\n  onBlurImdbUrl = (event) => {\n    if (!regexp.test(this.state.values.imdbUrl)) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          imdbUrlError: true,\n        },\n      }));\n    }\n  }\n\n  onBlurImdbId = (event) => {\n    if (!this.state.values.imdbId) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          imdbIdError: !prevState.values.imdbId,\n        },\n      }));\n    }\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.addMovie({ ...this.state.values });\n    this.setState({ values: defaultValues });\n  }\n\n  render() {\n    const { errors, values } = this.state;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.values;\n    const {\n      titleError,\n      descriptionError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state.errors;\n\n    const disabledSubmit = (Object.values(errors).some(error => error === true))\n      || (Object.values(values).some(value => value === ''));\n\n    return (\n      <>\n        <form onSubmit={this.onSubmit} className=\"form\">\n\n          <label className=\"form__item\">\n            Title\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onBlur={this.onBlurTitle}\n              onChange={this.handleInput}\n              className={cn('form__input', {'form__input-error': titleError})}\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">\n              Please, enter a title\n            </span>\n          )}\n\n          <label className=\"form__item\">\n            Description\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              onBlur={this.onBlurDescription}\n              onChange={this.handleInput}\n              className={cn('form__input', {'form__input-error': descriptionError})}\n            />\n          </label>\n          {descriptionError && (\n            <span className=\"error\">\n              Please, enter a description\n            </span>\n          )}\n          <label className=\"form__item\">\n            ImgUrl\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              value={imgUrl}\n              onChange={this.handleInput}\n              onBlur={this.onBlurImgUrl}\n              className={cn('form__input', {'form__input-error': imgUrlError})}\n            />\n          </label>\n          {imgUrlError && (\n            <span className=\"error\">\n              Please enter correct ImgUrl\n            </span>\n          )}\n          <label className=\"form__item\">\n            ImdbUrl\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              value={imdbUrl}\n              onChange={this.handleInput}\n              onBlur={this.onBlurImdbUrl}\n              className={cn('form__input', {'form__input-error': imdbUrlError})}\n            />\n          </label>\n          {imdbUrlError && (\n            <span className=\"error\">\n              Please enter correct ImdbUrl\n            </span>\n          )}\n          <label className=\"form__item\">\n            ImdbId\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              value={imdbId}\n              onBlur={this.onBlurImdbId}\n              onChange={this.handleInput}\n              className={cn('form__input', {'form__input-error': imdbIdError})}\n            />\n          </label>\n          {imdbIdError && (\n            <span className=\"error\">\n              Please enter ImdbId\n            </span>\n          )}\n          <button\n            type=\"submit\"\n            disabled={disabledSubmit}\n            className={cn(\n              { form__button: !disabledSubmit },\n              { 'form__button--disabled': disabledSubmit },\n            )}\n          >\n            Submit\n          </button>\n        </form>\n      </>\n\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}