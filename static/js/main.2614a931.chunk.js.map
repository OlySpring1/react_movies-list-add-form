{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regexp","NewMovie","state","values","errors","titleError","descriptionError","imgUrlError","imdbUrlError","handleInput","event","target","name","setState","prevState","value","clearForm","onBlurTitle","onBlurDescription","onBlurImgUrl","test","onBlurImdbUrl","onSubmit","preventDefault","props","addMovie","this","disabledSubmit","Object","some","error","type","onBlur","onChange","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2614a931.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      titleError: false,\n      descriptionError: false,\n      imgUrlError: false,\n      imdbUrlError: false,\n    },\n  };\n\n  handleInput = (event) => {\n    const { target } = event;\n    const { name } = event.target;\n\n    this.setState(prevState => ({\n      values: {\n        ...prevState.values,\n        [name]: target.value,\n      },\n      errors: {\n        ...prevState.errors,\n        [`${name}Error`]: false,\n      },\n    }));\n  };\n\n  clearForm = () => (\n    this.setState({\n      values: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    })\n  )\n\n  onBlurTitle = (event) => {\n    if (!this.state.values.title) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          titleError: !prevState.values.title,\n        },\n      }));\n    }\n  }\n\n  onBlurDescription = (event) => {\n    if (!this.state.values.title) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          descriptionError: !prevState.values.description,\n        },\n      }));\n    }\n  }\n\n  onBlurImgUrl = (event) => {\n    if (!regexp.test(this.state.values.imgUrl)\n      || this.state.values.imgUrl === '') {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          imgUrlError: true,\n        },\n      }));\n    }\n  }\n\n  onBlurImdbUrl = (event) => {\n    if (!regexp.test(this.state.values.imdbUrl)) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          imdbUrlError: true,\n        },\n      }));\n    }\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.addMovie({ ...this.state.values });\n    this.clearForm();\n  }\n\n  render() {\n    const { errors, values } = this.state;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.values;\n    const {\n      titleError,\n      descriptionError,\n      imgUrlError,\n      imdbUrlError,\n    } = this.state.errors;\n\n    const disabledSubmit = (Object.values(errors).some(error => error === true))\n      || (Object.values(values).some(value => value === ''));\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"form\">\n\n        <label className=\"form__item\">\n          Title\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onBlur={this.onBlurTitle}\n            onChange={this.handleInput}\n            className={titleError ? 'form__input-error' : 'form__input'}\n          />\n        </label>\n        {titleError && (\n          <span className=\"error\">\n            Please, enter a title\n          </span>\n        )}\n\n        <label className=\"form__item\">\n          Description\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onBlur={this.onBlurDescription}\n            onChange={this.handleInput}\n            className={descriptionError ? 'form__input-error' : 'form__input'}\n          />\n        </label>\n        {descriptionError && (\n          <span className=\"error\">\n            Please, enter a description\n          </span>\n        )}\n        <label className=\"form__item\">\n          ImgUrl\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleInput}\n            onBlur={this.onBlurImgUrl}\n            className={imgUrlError ? 'form__input-error' : 'form__input'}\n          />\n        </label>\n        {imgUrlError && (\n          <span className=\"error\">\n            Please enter correct ImgUrl\n          </span>\n        )}\n        <label className=\"form__item\">\n          ImdbUrl\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleInput}\n            onBlur={this.onBlurImdbUrl}\n            className={imdbUrlError ? 'form__input-error' : 'form__input'}\n          />\n        </label>\n        {imdbUrlError && (\n          <span className=\"error\">\n            Please enter correct ImdbUrl\n          </span>\n        )}\n        <label className=\"form__item\">\n          ImdbId\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleInput}\n            className=\"form__input\"\n          />\n        </label>\n        <button\n          type=\"submit\"\n          disabled={disabledSubmit}\n          className=\"form__button\"\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}